{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/NotificationMessage/NotificationMessage.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/NotificationMessage/NotificationMessage.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","type","onClick","NotificationMessage","message","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","list","optionsNames","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevOption","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,+JCGV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBAEEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GALIA,M,oBCHI,SAASM,EAAT,GAA2C,IAAZC,EAAW,EAAXA,QAC5C,OAAO,mBAAGN,UAAWC,IAAEK,QAAhB,SAA0BA,I,oBCapBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAST,UAAWC,IAAEM,QAAtB,UACE,oBAAIP,UAAWC,IAAEO,MAAjB,SAAyBA,IACxBC,M,gBCuBQC,EA3BI,SAAC,GAMb,IALHC,EAKE,EALFA,KACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,IACAC,EAEE,EAFFA,MACAC,EACE,EADFA,mBAEA,OAAO,qBAAIf,UAAWC,IAAEe,KAAjB,UACH,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDACwBA,EAAQ,EACtBC,EAAqB,IACrB,YCXZE,EAAe,CAAC,OAAQ,UAAW,OAC1B,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KAqBtBC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAK1B,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SAEI,cAACb,EAAD,CACEC,QAASqB,EACTpB,gBA5Bc,SAACE,GACvB,OAAQA,GACN,IAAK,OACHqB,GAAQ,SAACI,GAAD,OAAgBA,EAAa,KACrC,MACF,IAAK,UACHH,GAAW,SAACG,GAAD,OAAgBA,EAAa,KACxC,MACF,IAAK,MACHF,GAAO,SAACE,GAAD,OAAgBA,EAAa,KACpC,MACF,QACE,aAoBDD,IAAuB,EACtB,cAAC,EAAD,CAASf,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAnBDU,KAAKC,MAAc,IAAPf,EAAcY,SAuB7B,cAAClB,EAAD,CAAqBC,QAAQ,yBCpDrCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b4fd7bf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__LqS2d\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NotificationMessage_message__goyE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map((option) => (\n    <button\n      key={option}\n      className={s.btn}\n      type=\"button\"\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./NotificationMessage.module.css\";\n\nexport default function NotificationMessage({ message }) {\n  return <b className={s.message}>{message}</b>;\n}\n\nNotificationMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n}) => { \n    return <ul className={s.list}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>\n            Positive feedback: {total > 0\n                ? positivePercentage + \"%\"\n                : null}\n        </li>\n    </ul>;   \n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport NotificationMessage from \"./components/NotificationMessage\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\n\nconst optionsNames = [\"good\", \"neutral\", \"bad\"];\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prevOption) => prevOption + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevOption) => prevOption + 1);\n        break;\n      case \"bad\":\n        setBad((prevOption) => prevOption + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback());\n  };\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        {\n          <FeedbackOptions\n            options={optionsNames}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        }\n      </Section>\n      {countTotalFeedback() > 0 ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <NotificationMessage message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n\nApp.propTypes = {\n  option: PropTypes.string,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}